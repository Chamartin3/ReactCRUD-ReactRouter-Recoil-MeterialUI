{"version":3,"sources":["storage/index.js","components/List.js","views/Home.js","views/Deleted.js","views/About.js","layouts/Drawer.js","layouts/Toolbar.js","layouts/View.js","App.js","index.js"],"names":["toDoList","atom","key","default","id","content","status","deletedList","TaskList","starters","list","Recoil","useRecoilState","tasks","setTasks","deleted","setDeleted","React","useState","newt","setNewt","isMain","showTasks","lastId","length","pop","nextid","setNextid","deleteTask","deletedTask","filter","i","addTask","txt","new_task","editable","isEmpty","map","ot","t","editing","Home","props","Borradas","Imagen","alt","source","About","useStyles","makeStyles","theme","drawerOpen","width","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","spacing","breakpoints","up","LINKS","name","icon","path","AppDrawer","classes","useTheme","NavBar","appBar","zIndex","drawer","appBarShift","marginLeft","drawerWidth","menuButton","marginRight","hide","display","callOpen","View","location","useLocation","root","flexGrow","padding","contentShift","easeOut","App","setDrawer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6e81168.chunk.js","sourcesContent":["import {\n  RecoilRoot,\n  atom,\n  selector,\n  useRecoilState,\n  useRecoilValue,\n} from 'recoil';\n\nconst toDoList = atom({\n  key: 'toDoList',\n  default:  [\n    {  \n      id:1,\n      content:'Comprobar que Omar sabe de  desarrollo Web',\n      status:false\n    },  \n    {  \n      id:2,\n      content:'Tener una reunión para planificar el desarrollo',\n      status:false\n    },  \n    {  \n      id:3,\n      content:'Hacer la planificaoón de las iteraciones de desarrollo',\n      status:false\n    },\n  \n  ],\n});\n\nconst deletedList = atom({\n  key: 'deletedList',\n  default: [],\n});\n\nexport {\n  toDoList,\n  deletedList\n\n}","import React from 'react';\nimport { \n  Card, Toolbar, AppBar, Button,\n  List,\n  ListItem,\n  ListItemIcon,\n  Checkbox,\n  ListItemText,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Zoom,\n  TextField,\n  FormControl,\n  ListItemSecondaryAction,\n  \n  \n} from '@material-ui/core';\n\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport RestoreFromTrashIcon from '@material-ui/icons/RestoreFromTrash';\nimport  { toDoList, deletedList } from '@/storage'\nimport Recoil  from 'recoil';\n\n\nconst TaskList = ({starters, list}) => {\n  \n  const [tasks, setTasks] = Recoil.useRecoilState(toDoList)\n  const [deleted, setDeleted] = Recoil.useRecoilState(deletedList)\n\n  const [newt, setNewt] = React.useState('')\n  let isMain = list === \"main\"\n  let showTasks = isMain ? tasks : deleted\n\n  let lastId = showTasks.length === 0 ? 1 : [...showTasks ].pop().id\n  const [nextid, setNextid] = React.useState(lastId+1)\n\n  // Methods\n  const deleteTask = id =>{\n    let deletedTask = tasks.filter(i=>i.id == id)[0]\n    setDeleted( [ ...deleted, deletedTask ])\n    setTasks( tasks.filter(i=>i.id != id) )\n  } \n  const restoreTask = id => {\n    let deletedTask = deleted.filter(i=>i.id == id)[0]\n    setTasks( [ ...tasks, deletedTask ])\n    setDeleted( deleted.filter(i=>i.id != id) )\n  }\n  const removeForever = id => setDeleted( deleted.filter(i=>i.id != id) )\n  const addTask = txt => {\n    if (txt==='') return\n    let new_task={id:nextid, content:txt,status:false}\n    setTasks([...tasks,new_task]) \n    setNewt('')\n    setNextid(nextid+1)\n  }\n  const toggleAcomplishment = id => setTasks( tasks.map(ot=>{\n    let t = {...ot}\n    if(t.id != id) return t;\n    \n    t.status = !t.status\n    return t\n  }))\n  const editable = id =>{\n    let isEmpty = null\n    setTasks( tasks.map(ot=>{\n      let t = {...ot}\n      if(t.id != id) return t;\n      if(t.content === '') isEmpty = t.id\n      if(t.editing){\n        delete t.editing\n      }else{\n        t.editing=true\n      }\n      return t\n    }))\n    if(isEmpty) deleteTask(isEmpty)\n  } \n    const editTask = (id,txt) => setTasks( tasks.map(ot=>{\n      let t = {...ot}\n      if(t.id != id) return t\n      t.content = txt\n      return t\n    }))\n\n\n  // Template\n  return pug`\n  Card\n    Toolbar.MuiAppBar-colorPrimary.mb-3.justify-content-between\n      if isMain\n        h3 #{showTasks.length} tareas por realizar\n      else\n        h3 #{showTasks.length} tareas borradas\n    .container-fluid\n      if isMain\n        .row.px-3\n          .col-10\n            TextField(\n              onChange=e=>setNewt(e.target.value)\n              onKeyUp=(ev)=>{ if (ev.key === 'Enter') addTask(ev.target.value) }\n              fullWidth\n              value=newt \n              label=\"Agregar Tarea\")\n          .col-2\n            Button.btn.btn-dark(onClick=()=>addTask(newt)) Agregar\n\n      List\n        if showTasks.length == 0\n          ListItem(role=\"listitem\" button)\n            .justify-content-center\n              if isMain\n                h2 No tienes tareas programadas\n              else\n                h2 No tienes tareas eliminadas\n\n        each item in showTasks \n          ListItem(key=item.id role=\"listitem\" button)\n            ListItemIcon\n              if isMain\n                Checkbox(\n                onClick=()=>toggleAcomplishment(item.id)\n                checked=item.status\n                tabIndex=-1\n                disableRipple)\n            ListItemText\n              if item.editing\n                TextField(\n                  onChange=e=>editTask(item.id,e.target.value)\n                  onBlur=()=>editable(item.id)\n                  onKeyUp=(ev)=>{ if (ev.key === 'Enter') editable(item.id) }\n                  fullWidth value=item.content\n                  )\n              else\n                | #{item.content}\n            ListItemSecondaryAction\n              if isMain\n                Button.btn.btn-dark(onClick=()=>editable(item.id)) \n                  i.material-icons edit\n                Button.btn.btn-dark(onClick=()=>deleteTask(item.id)) \n                  i.material-icons delete\n              else\n                Button.btn.btn-dark(onClick=()=>restoreTask(item.id)) \n                  RestoreFromTrashIcon              \n                Button.btn.btn-dark(onClick=()=>removeForever(item.id)) \n                  DeleteForeverIcon\n  `\n}\n\nexport default TaskList","import React from 'react';\nimport TaskList from '@/components/List'\n\nimport {atom, selector, useRecoilState} from 'recoil';\n\nconst Home = props => {\n\n\n  return pug`\n    h1 Tareas\n    TaskList( list=\"main\")\n\n  `\n}\nexport default Home;","import React from 'react';\nimport TaskList from '@/components/List'\n\nconst Borradas = props => {\n\n  return pug`\n    h1 Borradas\n    TaskList\n  `\n}\nexport default Borradas;","import React from 'react';\n// import Avatar from '@material-ui/core/Avatar';\n\nimport {Typography, Avatar, Tooltip} from '@material-ui/core';\n\nconst Imagen =({ alt,source })=>pug`\nTooltip(title=alt)\n  Avatar.mx-3(style={width:90 , height:90  }, alt=alt, src=source )`\n\n\nconst About = props => {\n\n  return pug`\n    .container-fluid\n      .text-center\n        i.material-icons(style={fontSize: 90 }) info\n      .text-center\n        h1 Acerca de esta aplicación\n        .text-center.my-5\n        Typography( variant=\"subtitle1\").\n          Aplicación creada como scafold inicial para Pedro Pablo. \n          Crud básico que permite Crear, Editar, Leer y Eliminar tareas, trasfiriendolas en un Storage de  Estado en memoria construido con RecoilJS.\n        .texnt-center.my-5.row.justify-content-center\n          Imagen( alt=\"React\" source=\"/images/react.png\" )\n          Imagen( alt=\"Recoil\" source=\"/images/recoil.jpg\" )\n\n        Typography( variant=\"subtitle1\").\n          Escrito en React odos los componentes son funcionales utilizando Hooks. \n          Se usa MaterialUI para el Frontend básico de la aplicacíon, ReactRouter para management de vistas, y el grid de bootstrap con su variante material.\n        .text-center.my-5\n          .row.justify-content-center\n            Imagen(alt=\"Material UI\" source=\"/images/material.png\" )\n            Imagen( alt=\"React Router\" source=\"/images/router.png\" )   \n\n        Typography( variant=\"subtitle1\").\n          Como Herramientas de desarollo, se utiliza Pug como motor de templates.\n          Y config overrides para configurar Webpack\n        .text-center.my-5\n          .row.justify-content-center\n            Imagen( alt=\"Webpack\" source=\"/images/webpack.png\" )\n            Imagen( alt=\"Pug/Jade\" source=\"/images/pug.png\" )\n        Typography( variant=\"subtitle1\").\n          El uso es similar al de VueJS, pero habiendo experimentado ambos, Vue me resulta mas elegante y robusto para hacer dedarrollo.\n        Typography.m-5( variant=\"subtitle2\").\n          Caracas, Venezuela 🇻🇪 26 de Julio de 2020\n\n  `\n}\nexport default About;","import React from 'react';\nimport clsx from 'clsx';\nimport { \n  Typography,\n  Drawer,\n  IconButton,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Icon,\n  Button,\n  SvgIcon\n} from '@material-ui/core';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  }\n  \n}))\n\n\nconst LINKS =[\n  {name:'Tareas', icon:'list', path:'/'},\n  {name:'Borradas', icon:'delete', path:'/deleted'},\n  {name:'Acerca', icon:'info', path:'/about'},\n]\n\nconst AppDrawer = props => {\n  const classes = useStyles();\n  const theme = useTheme();\n  return pug`\n  Drawer(\n    variant=\"permanent\"\n    className=clsx(classes.drawer, {\n      [classes.drawerOpen]: props.drawer,\n      [classes.drawerClose]: !props.drawer,\n    })\n    classes={\n      paper: clsx({\n        [classes.drawerOpen]: props.drawer,\n        [classes.drawerClose]: !props.drawer,\n      }),\n    })\n    div(className=classes.toolbar)\n    Button(onClick=()=>props.closeDrawer())\n      ArrowBackRoundedIcon\n      Typography Ejemplo Pedro\n    Divider\n    List\n    each link,index in LINKS\n      Link(key=index to=link.path)\n        ListItem(button)\n          ListItemIcon\n            i.material-icons #{link.icon}\n          ListItemText #{link.name}\n    .mt-2\n  `\n}\n\n\n\nexport default AppDrawer","import React from 'react';\nimport clsx from 'clsx';\n\nimport {\n  AppBar,\n  Toolbar,\n  Icon,\n  IconButton,\n  Typography\n  } from '@material-ui/core';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n  \n\nconst NavBar = props => {\n  const useStyles = makeStyles((theme) => ({\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: props.drawerWidth,\n      width: `calc(100% - ${props.drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    hide: {\n      display: 'none',\n    },\n  }))\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const openDrawer = ()=> props.callOpen(true)\n  const classes = useStyles();\n  return pug`\n  AppBar(\n    position=\"fixed\"\n    className=clsx(classes.appBar, {\n      [classes.appBarShift]: props.drawer,\n    })\n    )\n    Toolbar()\n      IconButton(\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick=openDrawer\n        edge=\"start\"\n        className=clsx(classes.menuButton, {\n          [classes.hide]: props.drawer,\n        })\n        )\n        i.material-icons menu\n      Typography(variant=\"h6\" noWrap) Crud de lista de tareas\n  `\n}\n\n  export default NavBar","import React from 'react';\nimport {\n  Switch,\n  Route,\n  useLocation\n} from \"react-router-dom\";\n\nimport {\n  TransitionGroup,\n  CSSTransition\n} from \"react-transition-group\";\n\n\nimport Home from '@/views/Home.js';\nimport Deleted from '@/views/Deleted.js';\nimport About from '@/views/About.js';\n\n\n\nexport default function View() {\n  let location = useLocation();\n  return pug`\n  TransitionGroup\n    CSSTransition(key=location.key classNames=\"page\" timeout=300 )\n      Switch(location=location)\n        Route(path=\"/about\" component=About)\n        Route(path=\"/deleted\" component=Deleted)\n        Route(path=\"/\" component=Home)\n  `\n}","import React from 'react';\nimport Home from './views/Home.js';\nimport Deleted from './views/Deleted.js';\nimport About from './views/About.js';\n\nimport AppDrawer from '@/layouts/Drawer'\nimport NavBar from '@/layouts/Toolbar'\nimport View from '@/layouts/View'\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport 'bootstrap-material-design/dist/css/bootstrap-material-design.min.css';\nimport '@/assets/styles/App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  withRouter,\n  useLocation\n} from \"react-router-dom\";\n\nimport {\n  TransitionGroup,\n  CSSTransition\n} from \"react-transition-group\";\n\n\nimport { RecoilRoot } from 'recoil';\nimport './storage';\n\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  }\n}));\n\n// const Home = props => {\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [drawer, setDrawer] = React.useState(false);\n\n//   const toogleDrawer = (val) => {\n//     setOpen(val);\n//   };\n\n//   return pug`\n//   div(className=classes.root)\n//     NavBar(\n//       drawer=drawer\n//       callOpen=()=>setDrawer(true)\n//       drawerWidth=drawerWidth)\n//     AppDrawer(\n//       closeDrawer=()=>setDrawer(false)\n//       drawer=drawer)\n//     .container-fluid.pt-5\n//       .my-5\n//       TaskList\n//   `\n// }\n\n\n\n\n// function View() {\n//   let location = useLocation();\n//   return(\n//     <TransitionGroup>\n//       <CSSTransition  key={location.key} classNames=\"page\" timeout={300} >\n//         <Switch location={location}>\n//           <Route path=\"/about\" component={About} />\n//           <Route path=\"/deleted\" component={Deleted}/>\n//           <Route path=\"/\" component={Home}/>\n//         </Switch>\n//       </CSSTransition>\n//     </TransitionGroup>\n//   )\n// }\n\n// const RView = withRouter(View)\nfunction App() {\n  // console.log(location);\n  const classes = useStyles();\n  const theme = useTheme();\n  const [drawer, setDrawer] = React.useState(false);\n\n\n  return pug`\n  div(className=classes.root)\n    RecoilRoot\n      Router\n        NavBar(\n          drawer=drawer\n          callOpen=()=>setDrawer(true)\n          drawerWidth=drawerWidth)\n        AppDrawer(\n          closeDrawer=()=>setDrawer(false)\n          drawer=drawer)\n        .container-fluid.pt-5\n          .my-5\n            View\n  `\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport '@/assets/styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}